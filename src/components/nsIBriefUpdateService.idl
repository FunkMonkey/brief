#include "nsISupports.idl"
interface nsIVariant;

/**
 * nsIBriefUpdateService is responsible for downloading and parsing feeds. It
 * interacts with nsIBriefStorage service to update the database with the obtained data.
 */
[scriptable, uuid(76607B92-7E83-11DB-9369-10F955D89593)]
interface nsIBriefUpdateService : nsISupports {

  /**
   * Indicates if updating is in progress.
   */
  const short NOT_UPDATING = 0;
  const short BACKGROUND_UPDATING = 1;
  const short NORMAL_UPDATING = 2;

  readonly attribute short status;

  /**
   * Total number of feeds scheduled for current update batch (both completed
   * and pending ones).
   */
  readonly attribute unsigned long scheduledFeedsCount;

  /**
   * Number of completed feed in the current update batch.
   */
  readonly attribute unsigned long completedFeedsCount;

  /**
   * Downloads feeds and check them for updates.
   *
   * @param feeds Array of nsIBriefFeed's to be downloaded.
   * @param background [optional] Use longer delay between requesting subsequent
   *                   feeds in order to reduce the CPU load.
   */
  void updateFeeds(in nsIVariant feeds, [optional] in boolean background);

  /**
   * Downloads and checks for updates all the feeds in the database.
   *
   * @param background [optional] Use longer delay between requesting subsequent
   *                   feeds in order to reduce the CPU load.
   */
  void updateAllFeeds([optional] in boolean background);

  /**
   * Cancel the remaining update batch.
   */
  void stopUpdating();

};

#include "nsISupports.idl"
interface nsIBriefFeed;

/**
 * nsIBriefUpdateService is responsible for downloading and parsing feeds. It
 * interacts with nsIBriefStorage service to update the database with the obtained data.
 */
[scriptable, uuid(76607B92-7E83-11DB-9369-10F955D89593)]
interface nsIBriefUpdateService : nsISupports {

  /**
   * Indicates if a batch update is in progress and whether it is a normal or a
   * background one.
   */
  const short NO_UPDATE = 0;
  const short BACKGROUND_UPDATE = 1;
  const short NORMAL_UPDATE = 2;

  readonly attribute short updateInProgress;

  /**
   * Total number of feeds scheduled for current batch update (both completed and pending
   * ones).
   */
  readonly attribute unsigned long totalFeedsCount;

  /**
   * Number of completed feed in the current batch update.
   */
  readonly attribute unsigned long completedFeedsCount;

  /**
   * Download feeds and check them for updates. They must already be in the
   * database.
   *
   * @param feeds         Array of nsIBriefFeed's to be updated.
   * @param feedCount     Length of the |feeds| array.
   * @param inBackground  Fetch feeds with longer delay, designed for updating in the
   *                      background.
   */
  void fetchFeeds([const, array, size_is(feedCount)] in nsIBriefFeed feeds,
                  in unsigned long feedCount,
                  in boolean inBackground);

  /**
   * Download and check for updates all the feeds in the database.
   *
   * @param inBackground  Fetch feeds with longer delay, designed for updating in the
   *                      background.
   */
  void fetchAllFeeds(in boolean inBackground);

  void stopFetching();

};
